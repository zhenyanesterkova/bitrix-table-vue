this.BX=this.BX||{},this.BX.Denvic=this.BX.Denvic||{},function(t,e){"use strict";BX.Vue.component("bx-vue-table",{props:{rows:{type:Array,default:Array},columns:{type:Array,default:Array},columnsHeads:{type:Object,default:Object},getKey:{type:Function,default:function(t,e){return e}},headsClasses:{type:Object,default:Object},defaultHeadClass:{type:Object,default:Object},headsStyles:{type:Object,default:Object},defaultHeadStyle:{type:Object,default:Object},cellsClasses:{type:Object,default:Object},defaultCellClass:{type:Object,default:Object},cellsStyles:{type:Object,default:Object},defaultCellStyle:{type:Object,default:Object},theadClass:{type:Object,default:Object},theadStyle:{type:Object,default:Object},tbodyClass:{type:Object,default:Object},tbodyStyle:{type:Object,default:Object}},computed:{computedColumnsHeads:function(){var t=this;return this.columns.reduce((function(e,l){return e[l]=t.columnsHeads[l]||l,e}),{})},computedHeadsClasses:function(){var t=this;return this.columns.reduce((function(e,l){return e[l]=Object.assign({},t.defaultHeadClass,t.headsClasses[l]),e}),{})},computedHeadsStyles:function(){var t=this;return this.columns.reduce((function(e,l){return e[l]=Object.assign({},t.defaultHeadStyle,t.headsStyles[l]),e}),{})},computedCellsClasses:function(){var t=this;return this.columns.reduce((function(e,l){return e[l]=Object.assign({},t.defaultCellClass,t.cellsClasses[l]),e}),{})},computedCellsStyles:function(){var t=this;return this.columns.reduce((function(e,l){return e[l]=Object.assign({},t.defaultCellStyle,t.cellsStyles[l]),e}),{})}},template:'\n\t\t<table>\n\t\t\t<slot name="start-table"></slot>\n\t\t\t\t<thead v-bind:class="theadClass" v-bind:style="theadStyle">\n\t\t\t\t\t<slot name="start-thead"></slot>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\tv-for="column in columns"\n\t\t\t\t\t\t\t\tv-bind:key="column"\n\t\t\t\t\t\t\t\tv-bind:class="computedHeadsClasses[column]"\n\t\t\t\t\t\t\t\tv-bind:style="computedHeadsStyles[column]"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<slot :name="`${column}-head`" v-bind:head="computedColumnsHeads[column]">\n\t\t\t\t\t\t\t\t\t{{ computedColumnsHeads[column] }}\n\t\t\t\t\t\t\t\t</slot>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<slot name="end-thead"></slot>\n\t\t\t\t</thead>\n\t\t\t\t<tbody v-bind:class="tbodyClass" v-bind:style="tbodyStyle">\n\t\t\t\t\t<slot name="start-tbody"></slot>\n\t\t\t\t\t\t<tr v-for="(row, index) in rows" v-bind:key="getKey(row, index)">\n\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\tv-for="column in columns"\n\t\t\t\t\t\t\t\tv-bind:key="column"\n\t\t\t\t\t\t\t\tv-bind:class="computedCellsClasses[column]"\n\t\t\t\t\t\t\t\tv-bind:styles="computedCellsStyles[column]"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<slot :name="`start-${column}-cell`"></slot>\n\t\t\t\t\t\t\t\t<slot :name="`${column}-cell`" v-bind:row="row" v-bind:index="index">\n\t\t\t\t\t\t\t\t\t{{ row[column] }}\n\t\t\t\t\t\t\t\t</slot>\n\t\t\t\t\t\t\t\t<slot :name="`end-${column}-cell`"></slot>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t<slot name="end-tbody"></slot>\n\t\t\t\t</tbody>\n\t\t\t<slot name="end-table"></slot>\n\t\t</table>\n\t'})}(this.BX.Denvic.Table=this.BX.Denvic.Table||{});
//# sourceMappingURL=vue-table.bundle.js.map
