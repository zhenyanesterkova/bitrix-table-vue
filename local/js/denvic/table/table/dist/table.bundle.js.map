{"version":3,"file":"table.bundle.js","sources":["../src/TestSource.js","../src/mixins/Filterable.js","../src/mixins/Sortable.js","../src/mixins/Paginable.js","../src/mixins/InfScrollable.js","../src/mixins/virtualScrollable.js","../src/table.js"],"sourcesContent":["// let worker;\r\n// if (window.Worker) {\r\n//     worker = new Worker(\"data-worker.js\");\r\n// }\r\n\r\nfunction updateDataWithoutDebounce(data) {\r\n    let startIndex;\r\n    let endIndex;\r\n\r\n    if (data.infScrollable) {\r\n        startIndex = data.rows.length;\r\n        endIndex = startIndex ? startIndex + data.infScrollStepSize : data.infScrollStartSize;\r\n        if (endIndex >= data.length) {\r\n            return;\r\n        }\r\n    } else if (data.paginable) {\r\n        startIndex = data.pageSize * (data.pageNumber - 1);\r\n        endIndex = startIndex + data.pageSize;\r\n    }\r\n\r\n    BX.ajax({\r\n        url: '/local/ajax/denvic/ajax-vue.php',\r\n        data: {\r\n            sorts: data.sorts,\r\n            filters: data.filters,\r\n            navParams: {\r\n                pageSize: data.pageSize,\r\n                pageNumber: data.pageNumber,\r\n                infScroll: data.infScrollable,\r\n                sizeScroll: endIndex - startIndex,\r\n                startIndex: startIndex,\r\n                endIndex: endIndex\r\n            }\r\n        },\r\n        method: 'POST',\r\n        dataType: 'json',\r\n        timeout: 30,\r\n        async: true,\r\n        processData: true,\r\n        scriptsRunFirst: true,\r\n        emulateOnload: true,\r\n        start: true,\r\n        cache: false,\r\n        onsuccess: function (result) {\r\n\r\n            console.log(result);\r\n            if (data.infScrollable) {\r\n                data.rows = data.rows.concat(result.rows);\r\n            } else {\r\n                data.rows = result.rows;\r\n            }\r\n\r\n            data.totalPages = result.navPageCount;\r\n            data.length = result.length;\r\n            //data.totalPages = data.pageSize ? Math.ceil(result.length / data.pageSize) : 1;\r\n            data.bottomLoader = false;\r\n            data.lists.typeMeasure = Object.assign({}, result.typeMeasureList);\r\n            data.lists.industry = Object.assign({}, result.industryList);\r\n            data.lists.status = Object.assign({}, result.statusList);\r\n        },\r\n        onfailure: function () {\r\n            console.log('no data');\r\n        }\r\n    });\r\n\r\n\r\n    //  if (endIndex && endIndex > 0) {\r\n    //      let test;\r\n    //     test = Array.from(data.rows);\r\n    //     console.log(typeof test);\r\n    //     data.rows = data.rows.slice(startIndex, endIndex);\r\n    //  }\r\n\r\n    // worker.postMessage(message);\r\n}\r\n\r\nlet timeout;\r\n\r\nexport function updateData(data, clear) {\r\n\r\n    data.bottomLoader = true;\r\n    if (clear) {\r\n        data.rows = [];\r\n    }\r\n\r\n    if (timeout) {\r\n        clearTimeout(timeout);\r\n        timeout = null;\r\n    }\r\n    updateDataWithoutDebounce(data);\r\n    timeout = setTimeout(() => {\r\n\r\n    }, 1000);\r\n}","import { Vue } from 'ui.vue';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            filterable: true,\r\n            filters: {},\r\n        };\r\n    },\r\n    methods: {\r\n        updateFilters({ filter, column }) {\r\n            Vue.delete(this.filters, column);\r\n            if (filter) {\r\n                Vue.set(this.filters, column, filter);\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        filters() {\r\n            if (this.paginable) {\r\n                this.pageNumber = 1;\r\n            }\r\n            if (this.updateData instanceof Function) {\r\n                this.updateData();\r\n            }\r\n        },\r\n    },\r\n}","import { Vue } from \"ui.vue\"\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            sortable: true,\r\n            sorts: {},\r\n            sortsOrder: [],\r\n        };\r\n    },\r\n    methods: {\r\n        updateSorts({ sort, column }) {\r\n            if (sort === \"no\") {\r\n                if (column in this.sorts) {\r\n                    Vue.delete(this.sorts, column);\r\n                    Vue.delete(this.sortsOrder, this.sortsOrder.indexOf(column));\r\n                }\r\n            } else {\r\n                if (!(column in this.sorts)) {\r\n                    this.sortsOrder.push(column);\r\n                } else {\r\n                    Vue.delete(this.sorts, column);\r\n                }\r\n                Vue.set(this.sorts, column, sort);\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        sorts() {\r\n            if (this.paginable) {\r\n                this.pageNumber = 1;\r\n            }\r\n            if (this.updateData instanceof Function) {\r\n                this.updateData();\r\n            }\r\n        },\r\n        sortsOrger() {\r\n            if (this.paginable) {\r\n                this.pageNumber = 1;\r\n            }\r\n            if (this.updateData instanceof Function) {\r\n                this.updateData();\r\n            }\r\n        },\r\n    },\r\n}","export default {\r\n    data() {\r\n        return {\r\n            paginable: true,\r\n            pageSize: 0,\r\n            pageNumber: 1,\r\n        }\r\n    },\r\n    methods: {\r\n        updatePagination({ pageSize, pageNumber }) {\r\n            this.pageSize = pageSize;\r\n            this.pageNumber = pageNumber;\r\n        },\r\n    },\r\n    watch: {\r\n        pageSize() {\r\n            if (this.updateData instanceof Function) {\r\n                this.updateData();\r\n            }\r\n        },\r\n        pageNumber() {\r\n            if (this.updateData instanceof Function) {\r\n                this.updateData();\r\n            }\r\n        },\r\n    },\r\n}","export default {\r\n    data() {\r\n        return {\r\n            infScrollable: true,\r\n\r\n            infScrollViewportHeight: 0,\r\n            infScrollBottomPosition: 0,\r\n        };\r\n    },\r\n    created() {\r\n        this.infScrollUpdateViewportHeight();\r\n        this.infScrollUpdateCurrentPosition();\r\n        window.addEventListener(\"resize\", this.infScrollUpdateViewportHeight);\r\n        window.addEventListener(\"scroll\", this.infScrollUpdateCurrentPosition);\r\n        if (this.infScrollable) {\r\n            this.infScrollBottomAnchor = document.querySelector(\"#infScrollBottomAnchor\");\r\n            this.infScrollUpdateBottomPosition();\r\n            window.addEventListener(\"resize\", this.infScrollUpdateBottomPosition);\r\n        }\r\n    },\r\n    unmounted() {\r\n        window.removeEventListener(\"resize\", this.infScrollUpdateViewportHeight);\r\n        window.removeEventListener(\"scroll\", this.infScrollUpdateCurrentPosition);\r\n        if (this.infScrollable) {\r\n            window.removeEventListener(\"resize\", this.infScrollUpdateBottomPosition);\r\n        }\r\n    },\r\n    methods: {\r\n        infScrollUpdateViewportHeight() {\r\n            this.infScrollViewportHeight = document.documentElement.clientHeight;\r\n        },\r\n        infScrollUpdateBottomPosition() {\r\n            this.infScrollBottomPosition = this.infScrollBottomAnchor.getBoundingClientRect().top + window.pageYOffset;\r\n        },\r\n        infScrollUpdateCurrentPosition() {\r\n            const currentPosition = window.pageYOffset;\r\n            const viewportHeight = this.infScrollViewportHeight;\r\n            const bottomPosition = this.infScrollBottomPosition;\r\n            const triggerOffset = this.infScrollTriggerOffset;\r\n\r\n            if (this.infScrollable && ((bottomPosition - currentPosition - viewportHeight) < triggerOffset)) {\r\n                this.updateData(true);\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n        infScrollable() {\r\n            if (this.infScrollable) {\r\n                this.$nextTick(() => {\r\n                    this.infScrollBottomAnchor = document.querySelector(\"#infScrollBottomAnchor\");\r\n                    this.infScrollUpdateBottomPosition();\r\n                    window.addEventListener(\"resize\", this.infScrollUpdateBottomPosition);\r\n                });\r\n            } else {\r\n                window.removeEventListener(\"resize\", this.infScrollUpdateBottomPosition);\r\n            }\r\n        },\r\n        rows() {\r\n            if (this.infScrollable) {\r\n                this.$nextTick(() => {\r\n                    this.infScrollUpdateBottomPosition();\r\n                });\r\n            }\r\n        }\r\n    },\r\n}\r\n","export default {\r\n    data() {\r\n        return {\r\n            virtualScrollable: true,\r\n\r\n            virtualScrollViewportHeight: 0,\r\n            virtualScrollStartPosition: 0,\r\n            virtualScrollCurrentPosition: 0,\r\n        };\r\n    },\r\n    created() {\r\n        this.virtualScrollUpdateViewportHeight();\r\n        this.virtualScrollUpdateCurrentPosition();\r\n        window.addEventListener(\"resize\", this.virtualScrollUpdateViewportHeight);\r\n        window.addEventListener(\"scroll\", this.virtualScrollUpdateCurrentPosition);\r\n        if (this.virtualScrollable) {\r\n            this.virtualScrollTopFiller = document.querySelector(\"#virtualScrollTopFiller\");\r\n            this.virtualScrollBottomFiller = document.querySelector(\"#virtualScrollBottomFiller\");\r\n            this.virtualScrollUpdateStartPosition();\r\n            window.addEventListener(\"resize\", this.virtualScrollUpdateStartPosition);\r\n        }\r\n    },\r\n    unmounted() {\r\n        window.removeEventListener(\"resize\", this.virtualScrollUpdateViewportHeight);\r\n        window.removeEventListener(\"scroll\", this.virtualScrollUpdateCurrentPosition);\r\n        if (this.virtualScrollable) {\r\n            window.removeEventListener(\"resize\", this.virtualScrollUpdateStartPosition);\r\n        }\r\n    },\r\n    computed: {\r\n        virtualScrollListSize() {\r\n            const rowHeight = this.virtualScrollRowHeight;\r\n            return rowHeight * this.rows.length;\r\n        },\r\n        virtualScrollListPosition() {\r\n            const currentPosition = this.virtualScrollCurrentPosition;\r\n            const startPosition = this.virtualScrollStartPosition;\r\n            return currentPosition - startPosition;\r\n        },\r\n        virtualScrollTopFillerCount() {\r\n            const listPosition = this.virtualScrollListPosition;\r\n            const rowHeight = this.virtualScrollRowHeight;\r\n            const bufferSize = this.virtualScrollBufferSize;\r\n            const topFilterCount = Math.floor(listPosition / rowHeight) - bufferSize;\r\n            return topFilterCount > 0 ? topFilterCount : 0;\r\n        },\r\n        virtualScrollViewportCount() {\r\n            const rowHeight = this.virtualScrollRowHeight;\r\n            const bufferSize = this.virtualScrollBufferSize;\r\n            const viewportHeight = this.virtualScrollViewportHeight;\r\n            return Math.ceil(viewportHeight / rowHeight) + 2 * bufferSize;\r\n        },\r\n        virtualScrollBottomFillerCount() {\r\n            const topFillerCount = this.virtualScrollTopFillerCount;\r\n            const viewportCount = this.virtualScrollViewportCount;\r\n            const bottomFilterCount = this.rows.length - topFillerCount - viewportCount;\r\n            return bottomFilterCount > 0 ? bottomFilterCount : 0;\r\n        },\r\n        virtualScrollTopFillerSize() {\r\n            const topFillerCount = this.virtualScrollTopFillerCount;\r\n            const rowHeight = this.virtualScrollRowHeight;\r\n            return topFillerCount * rowHeight;\r\n        },\r\n        virtualScrollBottomFillerSize() {\r\n            const bottomFillerCount = this.virtualScrollBottomFillerCount;\r\n            const rowHeight = this.virtualScrollRowHeight;\r\n            return bottomFillerCount * rowHeight;\r\n        },\r\n        virtualScrollRows() {\r\n            const topFillerCount = this.virtualScrollTopFillerCount;\r\n            const viewportCount = this.virtualScrollViewportCount;\r\n            return this.rows.slice(topFillerCount, topFillerCount + viewportCount);\r\n        },\r\n    },\r\n    methods: {\r\n        virtualScrollUpdateViewportHeight() {\r\n            this.virtualScrollViewportHeight = document.documentElement.clientHeight;\r\n        },\r\n        virtualScrollUpdateStartPosition() {\r\n            this.virtualScrollStartPosition = this.virtualScrollTopFiller.getBoundingClientRect().top + window.pageYOffset;\r\n        },\r\n        virtualScrollUpdateCurrentPosition() {\r\n            this.virtualScrollCurrentPosition = window.pageYOffset;\r\n        },\r\n        virtualScrollGetKey(row, index) {\r\n            const topFillerCount = this.virtualScrollTopFillerCount;\r\n            const viewportCount = this.virtualScrollViewportCount;\r\n            return (index + topFillerCount) % viewportCount;\r\n        }\r\n    },\r\n    watch: {\r\n        virtualScrollable() {\r\n            if (this.virtualScrollable) {\r\n                this.$nextTick(() => {\r\n                    this.virtualScrollTopFiller = document.querySelector(\"#virtualScrollTopFiller\");\r\n                    this.virtualScrollBottomFiller = document.querySelector(\"#virtualScrollBottomFiller\");\r\n                    this.virtualScrollUpdateStartPosition();\r\n                    window.addEventListener(\"resize\", this.virtualScrollUpdateStartPosition);\r\n                });\r\n            } else {\r\n                window.removeEventListener(\"resize\", this.virtualScrollUpdateStartPosition);\r\n            }\r\n        },\r\n    },\r\n}","import { Vue } from 'ui.vue';\r\n\r\nimport { TableLoader } from \"denvic.table.loader\";\r\nimport { Filter } from \"denvic.table.filters\";\r\nimport { SwitchSorter } from \"denvic.table.sorters\";\r\nimport { updateData } from \"./TestSource\";\r\nimport { MyTableHead } from \"denvic.table.table-head\";\r\nimport { Paginator } from \"denvic.table.paginators\";\r\nimport { VueTable } from \"denvic.table.vue-table\";\r\nimport Filterable from \"./mixins/Filterable\";\r\nimport Sortable from \"./mixins/Sortable\";\r\nimport Paginable from \"./mixins/Paginable\";\r\nimport InfScrollable from \"./mixins/InfScrollable\";\r\nimport virtualScrollable from \"./mixins/virtualScrollable\";\r\n\r\nVue.component('bx-table', {\r\n\ttemplate: `\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\tИспользовать бесконечный скролл\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tv-model=\"infScrollable\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tИспользовать виртуальный скролл\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tv-model=\"virtualScrollable\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<bx-paginators\r\n\t\t\t\tv-if=\"!infScrollable\"\r\n\t\t\t\tv-bind:pageSize=\"pageSize\"\r\n\t\t\t\tv-bind:pageNumber=\"pageNumber\"\r\n\t\t\t\tv-bind:totalPages=\"totalPages\"\r\n\t\t\t\t@paginate=\"updatePagination($event)\"\r\n\t\t\t/>\r\n\t\t\t<bx-vue-table\r\n\t\t\t\tv-bind:rows=\"computedRows\"\r\n\t\t\t\tv-bind:columns=\"columns\"\r\n\t\t\t\tv-bind:columnsHeads=\"columnsHeads\"\r\n\t\t\t\tv-bind:getKey=\"computedGetKey\"\r\n\t\t\t\tv-bind:defaultHeadClass=\"{ ['table-head']: true }\"\r\n\t\t\t\tv-bind:defaultCellClass=\"{ ['table-cell']: true }\"\r\n\t\t\t\tv-bind:useVirtualScroll=\"virtualScrollable\"\r\n\t\t\t\tv-bind:virtualScrollHeight=\"20\"\r\n\t\t\t\tv-bind:virtualScrollCount=\"25\"\r\n\t\t\t\tclass=\"table\"\r\n\t\t\t>\r\n\t\t\t\t<template v-if=\"virtualScrollable\" v-slot:start-tbody>\r\n\t\t\t\t\t<tr\r\n\t\t\t\t\t\tv-bind:colspan=\"rowSize\"\r\n\t\t\t\t\t\tid=\"virtualScrollTopFiller\"\r\n\t\t\t\t\t\tv-bind:style=\"{height: \\`\\${virtualScrollTopFillerSize}px\\`}\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</template>\r\n\t\t\t\t\r\n\t\t\t\t<template v-for=\"column in columns\" v-slot:[\\`\\${column}-head\\`]=\"{head}\">\r\n\t\t\t\t\t<bx-table-head v-bind:head=\"head\" v-bind:key=\"column\">\r\n\t\t\t\t\t\t<template v-if=\"column === 'announcementDate'\" v-slot:sorter\r\n\t\t\t\t\t\t\t><bx-sorters\r\n\t\t\t\t\t\t\t\tv-bind:sort=\"sorts[column]\"\r\n\t\t\t\t\t\t\t\tv-bind:column=\"column\"\r\n\t\t\t\t\t\t\t\tv-bind:index=\"sortsIndexes[column]\"\r\n\t\t\t\t\t\t\t\t@sort=\"updateSorts($event)\"\r\n\t\t\t\t\t\t/></template>\r\n\t\t\t\t\t\t<template v-slot:filter\r\n\t\t\t\t\t\t\t><bx-filters\r\n\t\t\t\t\t\t\t\tv-bind:is=\"filtersComponents[column]\"\r\n\t\t\t\t\t\t\t\tv-bind:filter=\"filters[column]\"\r\n\t\t\t\t\t\t\t\tv-bind:column=\"column\"\r\n\t\t\t\t\t\t\t\tv-bind:type=\"filtersTypes[column]\"\r\n\t\t\t\t\t\t\t\t:values=\"lists[column]\"\r\n\t\t\t\t\t\t\t\t@filter=\"updateFilters($event)\"\r\n\t\t\t\t\t\t/></template>\r\n\t\t\t\t\t</bx-table-head>\r\n\t\t\t\t</template>\r\n\r\n\t\t\t\t\r\n\t\t\t\t<template v-slot:source-cell=\"{row}\">\r\n\t\t\t\t\t<noindex>\r\n\t\t\t\t\t\t<a rel=\"nofollow\" :href=\"\\`\\${row.source}\\`\">{{ row.source }}</a>\r\n\t\t\t\t\t</noindex>\r\n\t\t\t\t</template>\r\n\r\n\t\t\t\t<template v-slot:end-tbody>\r\n\t\t\t\t\t<tr\r\n\t\t\t\t\t\tv-if=\"virtualScrollable\"\r\n\t\t\t\t\t\tv-bind:colspan=\"rowSize\"\r\n\t\t\t\t\t\tid=\"virtualScrollBottomFiller\"\r\n\t\t\t\t\t\tv-bind:style=\"\\`height:\\${virtualScrollBottomFillerSize}px\\`\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<tr\r\n\t\t\t\t\t\tv-if=\"infScrollable\"\r\n\t\t\t\t\t\tv-bind:colspan=\"rowSize\"\r\n\t\t\t\t\t\tid=\"infScrollBottomAnchor\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<bx-loader v-if=\"bottomLoader\" v-bind:colspan=\"rowSize\" />\r\n\t\t\t\t</template>\r\n\t\t\t</bx-vue-table>\r\n\r\n\t\t\t<bx-paginators\r\n\t\t\t\tv-if=\"!infScrollable\"\r\n\t\t\t\tv-bind:pageSize=\"pageSize\"\r\n\t\t\t\tv-bind:pageNumber=\"pageNumber\"\r\n\t\t\t\tv-bind:totalPages=\"totalPages\"\r\n\t\t\t\t@paginate=\"updatePagination($event)\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t`,\r\n\tprops: {\r\n\t\turl: '',\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\trows: [],\r\n\t\t\tcolumns: [\"typeMeasure\", \"industry\", \"status\", \"description\", \"announcementDate\", \"validity\", \"supportAmount\", \"source\"],\r\n\r\n\t\t\tlists: {\r\n\t\t\t\ttypeMeasure: {\r\n\t\t\t\t\t0: ''\r\n\t\t\t\t},\r\n\t\t\t\tindustry: {},\r\n\t\t\t\tstatus: {},\r\n\t\t\t},\r\n\t\t\tcolumnsHeads: {\r\n\t\t\t\ttypeMeasure: \"Тип\",\r\n\t\t\t\tindustry: \"Отрасль\",\r\n\t\t\t\tstatus: \"Статус\",\r\n\t\t\t\tdescription: \"Описание\",\r\n\t\t\t\tannouncementDate: \"Дата объявления\",\r\n\t\t\t\tvalidity: \"Срок действия\",\r\n\t\t\t\tsupportAmount: \"Сумма\",\r\n\t\t\t\tsource: \"Источник\",\r\n\t\t\t},\r\n\r\n\t\t\tfiltersTypes: {\r\n\t\t\t\ttypeMeasure: \"select\",\r\n\t\t\t\tindustry: \"select\",\r\n\t\t\t\tstatus: \"select\",\r\n\t\t\t\tdescription: \"\",\r\n\t\t\t\tannouncement_date: \"\",\r\n\t\t\t\tvalidity: \"\",\r\n\t\t\t\tsupportAmount: \"\",\r\n\t\t\t\tsource: \"\",\r\n\t\t\t},\r\n\t\t\tfiltersComponents: {\r\n\t\t\t\ttypeMeasure: \"bx-filters\",\r\n\t\t\t\tindustry: \"bx-filters\",\r\n\t\t\t\tstatus: \"bx-filters\",\r\n\t\t\t\tdescription: \"\",\r\n\t\t\t\tannouncement_date: \"\",\r\n\t\t\t\tvalidity: \"\",\r\n\t\t\t\tsupportAmount: \"\",\r\n\t\t\t\tsource: \"\",\r\n\t\t\t},\r\n\r\n\t\t\tbottomLoader: false,\r\n\r\n\t\t\tpageSize: 20,\r\n\t\t\ttotalPages: 0,\r\n\r\n\t\t\tinfScrollable: false,\r\n\t\t\tinfScrollStartSize: 10,\r\n\t\t\tinfScrollStepSize: 5,\r\n\t\t\tinfScrollTriggerOffset: 1000,\r\n\r\n\t\t\tvirtualScrollable: false,\r\n\t\t\tvirtualScrollBufferSize: 10,\r\n\t\t\tvirtualScrollRowHeight: 20,\r\n\t\t};\r\n\t},\r\n\tcomputed: {\r\n\t\trowSize() {\r\n\t\t\treturn this.columns.length;\r\n\t\t},\r\n\t\tsortsIndexes() {\r\n\t\t\treturn this.sortsOrder.reduce((res, column, index) => {\r\n\t\t\t\tres[column] = index + 1;\r\n\t\t\t\treturn res;\r\n\t\t\t}, {});\r\n\t\t},\r\n\t\tcomputedRows() {\r\n\t\t\treturn this.virtualScrollable ? this.virtualScrollRows : this.rows;\r\n\t\t},\r\n\t\tcomputedHeadLists() {\r\n\t\t\treturn this.virtualScrollable ? this.virtualScrollRows : this.rows;\r\n\t\t},\r\n\t\tcomputedGetKey() {\r\n\t\t\treturn this.virtualScrollable ? this.virtualScrollGetKey : this.getKey;\r\n\t\t},\r\n\t\tgetKey(row) {\r\n\t\t\treturn row.id;\r\n\t\t},\r\n\t},\r\n\tmethods: {\r\n\t\tupdateData(infScroll) {\r\n\t\t\tupdateData(this, !infScroll);\r\n\t\t},\r\n\r\n\t},\r\n\tcreated() {\r\n\t\tthis.updateData();\r\n\t},\r\n\twatch: {\r\n\t\tinfScrollable() {\r\n\t\t\t(this.paginable = !this.infScrollable), this.updateData();\r\n\t\t},\r\n\t},\r\n\tmixins: [Filterable, Sortable, Paginable, InfScrollable, virtualScrollable],\r\n})"],"names":["timeout","updateData","data","clear","bottomLoader","rows","clearTimeout","startIndex","endIndex","infScrollable","length","infScrollStepSize","infScrollStartSize","paginable","pageSize","pageNumber","BX","ajax","url","sorts","filters","navParams","infScroll","sizeScroll","method","dataType","async","processData","scriptsRunFirst","emulateOnload","start","cache","onsuccess","result","console","log","concat","totalPages","navPageCount","lists","typeMeasure","Object","assign","typeMeasureList","industry","industryList","status","statusList","onfailure","updateDataWithoutDebounce","setTimeout","filterable","methods","updateFilters","filter","column","Vue","this","set","watch","Function","sortable","sortsOrder","updateSorts","sort","indexOf","push","sortsOrger","updatePagination","infScrollViewportHeight","infScrollBottomPosition","created","infScrollUpdateViewportHeight","infScrollUpdateCurrentPosition","window","addEventListener","infScrollBottomAnchor","document","querySelector","infScrollUpdateBottomPosition","unmounted","removeEventListener","documentElement","clientHeight","getBoundingClientRect","top","pageYOffset","currentPosition","viewportHeight","bottomPosition","triggerOffset","infScrollTriggerOffset","$nextTick","_this","_this2","virtualScrollable","virtualScrollViewportHeight","virtualScrollStartPosition","virtualScrollCurrentPosition","virtualScrollUpdateViewportHeight","virtualScrollUpdateCurrentPosition","virtualScrollTopFiller","virtualScrollBottomFiller","virtualScrollUpdateStartPosition","computed","virtualScrollListSize","virtualScrollRowHeight","virtualScrollListPosition","virtualScrollTopFillerCount","listPosition","rowHeight","bufferSize","virtualScrollBufferSize","topFilterCount","Math","floor","virtualScrollViewportCount","ceil","virtualScrollBottomFillerCount","topFillerCount","viewportCount","bottomFilterCount","virtualScrollTopFillerSize","virtualScrollBottomFillerSize","virtualScrollRows","slice","virtualScrollGetKey","row","index","component","template","props","columns","columnsHeads","description","announcementDate","validity","supportAmount","source","filtersTypes","announcement_date","filtersComponents","rowSize","sortsIndexes","reduce","res","computedRows","computedHeadLists","computedGetKey","getKey","id","mixins","Filterable","Sortable","Paginable","InfScrollable"],"mappings":"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"}