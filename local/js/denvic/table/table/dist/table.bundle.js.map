{"version":3,"file":"table.bundle.js","sources":["../src/TestSource.js","../src/mixins/Filterable.js","../src/mixins/Sortable.js","../src/mixins/Paginable.js","../src/mixins/InfScrollable.js","../src/mixins/virtualScrollable.js","../src/table.js"],"sourcesContent":["// let worker;\n// if (window.Worker) {\n//     worker = new Worker(\"data-worker.js\");\n// }\n\nfunction updateDataWithoutDebounce(data) {\n    let startIndex;\n    let endIndex;\n\n    if (data.infScrollable) {\n        startIndex = data.rows.length;\n        endIndex = startIndex ? startIndex + data.infScrollStepSize : data.infScrollStartSize;\n    } else if (data.paginable) {\n        startIndex = data.pageSize * (data.pageNumber - 1);\n        endIndex = startIndex + data.pageSize;\n    }\n\n    BX.ajax({\n        url: '/local/ajax/denvic/ajax-vue.php',\n        data: {\n            sorts: data.sorts,\n            filters: data.filters,\n            navParams: {\n                pageSize: data.pageSize,\n                pageNumber: data.pageNumber,\n                startIndex: startIndex,\n                endIndex: endIndex\n\n            }\n        },\n        method: 'POST',\n        dataType: 'json',\n        timeout: 30,\n        async: true,\n        processData: true,\n        scriptsRunFirst: true,\n        emulateOnload: true,\n        start: true,\n        cache: false,\n        onsuccess: function(result){\n            \n                console.log(result);\n                data.rows = result.rows;\n                \n                data.totalPages = data.pageSize ? Math.ceil(result.length / data.pageSize) : 1;\n                data.bottomLoader = false;\n                data.lists.typeMeasure = Object.assign({}, result.typeMeasureList);\n                data.lists.industry = Object.assign({}, result.industryList);\n                data.lists.status = Object.assign({}, result.statusList);\n        },\n        onfailure: function(){\n            console.log('no data');\n        }\n    });\n    \n\n    //  if (endIndex && endIndex > 0) {\n    //      let test;\n    //     test = Array.from(data.rows);\n    //     console.log(typeof test);\n    //     data.rows = data.rows.slice(startIndex, endIndex);\n    //  }\n   \n    // worker.postMessage(message);\n}\n\nlet timeout;\n\nexport function updateData(data, clear) {\n    \n    data.bottomLoader = true;\n    if (clear) {\n        data.rows = [];\n    }\n\n    if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n    }\n    updateDataWithoutDebounce(data);\n    timeout = setTimeout(() => {\n        \n    }, 1000);\n}","import { Vue } from 'ui.vue';\n\nexport default {\n    data() {\n        return {\n            filterable: true,\n            filters: {},\n        };\n    },\n    methods: {\n        updateFilters({ filter, column }) {\n            Vue.delete(this.filters, column);\n            if (filter) {\n                Vue.set(this.filters, column, filter);\n            }\n        }\n    },\n    watch: {\n        filters() {\n            if (this.paginable) {\n                this.pageNumber = 1;\n            }\n            if (this.updateData instanceof Function) {\n                this.updateData();\n            }\n        },\n    },\n}","import { Vue } from \"ui.vue\"\n\nexport default {\n    data() {\n        return {\n            sortable: true,\n            sorts: {},\n            sortsOrder: [],\n        };\n    },\n    methods: {\n        updateSorts({ sort, column }) {\n            if (sort === \"no\") {\n                if (column in this.sorts) {\n                    Vue.delete(this.sorts, column);\n                    Vue.delete(this.sortsOrder, this.sortsOrder.indexOf(column));\n                }\n            } else {\n                if (!(column in this.sorts)) {\n                    this.sortsOrder.push(column);\n                } else {\n                    Vue.delete(this.sorts, column);\n                }\n                Vue.set(this.sorts, column, sort);\n            }\n        }\n    },\n    watch: {\n        sorts() {\n            if (this.paginable) {\n                this.pageNumber = 1;\n            }\n            if (this.updateData instanceof Function) {\n                this.updateData();\n            }\n        },\n        sortsOrger() {\n            if (this.paginable) {\n                this.pageNumber = 1;\n            }\n            if (this.updateData instanceof Function) {\n                this.updateData();\n            }\n        },\n    },\n}","export default {\n    data() {\n        return {\n            paginable: true,\n            pageSize: 0,\n            pageNumber: 1,\n        }\n    },\n    methods: {\n        updatePagination({ pageSize, pageNumber }) {\n            this.pageSize = pageSize;\n            this.pageNumber = pageNumber;\n        },\n    },\n    watch: {\n        pageSize() {\n            if (this.updateData instanceof Function) {\n                this.updateData();\n            }\n        },\n        pageNumber() {\n            if (this.updateData instanceof Function) {\n                this.updateData();\n            }\n        },\n    },\n}","export default {\n    data() {\n        return {\n            infScrollable: true,\n\n            infScrollViewportHeight: 0,\n            infScrollBottomPosition: 0,\n        };\n    },\n    created() {\n        this.infScrollUpdateViewportHeight();\n        this.infScrollUpdateCurrentPosition();\n        window.addEventListener(\"resize\", this.infScrollUpdateViewportHeight);\n        window.addEventListener(\"scroll\", this.infScrollUpdateCurrentPosition);\n        if (this.infScrollable) {\n            this.infScrollBottomAnchor = document.querySelector(\"#infScrollBottomAnchor\");\n            this.infScrollUpdateBottomPosition();\n            window.addEventListener(\"resize\", this.infScrollUpdateBottomPosition);\n        }\n    },\n    unmounted() {\n        window.removeEventListener(\"resize\", this.infScrollUpdateViewportHeight);\n        window.removeEventListener(\"scroll\", this.infScrollUpdateCurrentPosition);\n        if (this.infScrollable) {\n            window.removeEventListener(\"resize\", this.infScrollUpdateBottomPosition);\n        }\n    },\n    methods: {\n        infScrollUpdateViewportHeight() {\n            this.infScrollViewportHeight = document.documentElement.clientHeight;\n        },\n        infScrollUpdateBottomPosition() {\n            this.infScrollBottomPosition = this.infScrollBottomAnchor.getBoundingClientRect().top + window.pageYOffset;\n        },\n        infScrollUpdateCurrentPosition() {\n            const currentPosition = window.pageYOffset;\n            const viewportHeight = this.infScrollViewportHeight;\n            const bottomPosition = this.infScrollBottomPosition;\n            const triggerOffset = this.infScrollTriggerOffset;\n\n            if (this.infScrollable && ((bottomPosition - currentPosition - viewportHeight) < triggerOffset)) {\n                this.updateData(true);\n            }\n        },\n    },\n    watch: {\n        infScrollable() {\n            if (this.infScrollable) {\n                this.$nextTick(() => {\n                    this.infScrollBottomAnchor = document.querySelector(\"#infScrollBottomAnchor\");\n                    this.infScrollUpdateBottomPosition();\n                    window.addEventListener(\"resize\", this.infScrollUpdateBottomPosition);\n                });\n            } else {\n                window.removeEventListener(\"resize\", this.infScrollUpdateBottomPosition);\n            }\n        },\n        rows() {\n            if (this.infScrollable) {\n                this.$nextTick(() => {\n                    this.infScrollUpdateBottomPosition();\n                });\n            }\n        }\n    },\n}\n","export default {\n    data() {\n        return {\n            virtualScrollable: true,\n\n            virtualScrollViewportHeight: 0,\n            virtualScrollStartPosition: 0,\n            virtualScrollCurrentPosition: 0,\n        };\n    },\n    created() {\n        this.virtualScrollUpdateViewportHeight();\n        this.virtualScrollUpdateCurrentPosition();\n        window.addEventListener(\"resize\", this.virtualScrollUpdateViewportHeight);\n        window.addEventListener(\"scroll\", this.virtualScrollUpdateCurrentPosition);\n        if (this.virtualScrollable) {\n            this.virtualScrollTopFiller = document.querySelector(\"#virtualScrollTopFiller\");\n            this.virtualScrollBottomFiller = document.querySelector(\"#virtualScrollBottomFiller\");\n            this.virtualScrollUpdateStartPosition();\n            window.addEventListener(\"resize\", this.virtualScrollUpdateStartPosition);\n        }\n    },\n    unmounted() {\n        window.removeEventListener(\"resize\", this.virtualScrollUpdateViewportHeight);\n        window.removeEventListener(\"scroll\", this.virtualScrollUpdateCurrentPosition);\n        if (this.virtualScrollable) {\n            window.removeEventListener(\"resize\", this.virtualScrollUpdateStartPosition);\n        }\n    },\n    computed: {\n        virtualScrollListSize() {\n            const rowHeight = this.virtualScrollRowHeight;\n            return rowHeight * this.rows.length;\n        },\n        virtualScrollListPosition() {\n            const currentPosition = this.virtualScrollCurrentPosition;\n            const startPosition = this.virtualScrollStartPosition;\n            return currentPosition - startPosition;\n        },\n        virtualScrollTopFillerCount() {\n            const listPosition = this.virtualScrollListPosition;\n            const rowHeight = this.virtualScrollRowHeight;\n            const bufferSize = this.virtualScrollBufferSize;\n            const topFilterCount = Math.floor(listPosition / rowHeight) - bufferSize;\n            return topFilterCount > 0 ? topFilterCount : 0;\n        },\n        virtualScrollViewportCount() {\n            const rowHeight = this.virtualScrollRowHeight;\n            const bufferSize = this.virtualScrollBufferSize;\n            const viewportHeight = this.virtualScrollViewportHeight;\n            return Math.ceil(viewportHeight / rowHeight) + 2 * bufferSize;\n        },\n        virtualScrollBottomFillerCount() {\n            const topFillerCount = this.virtualScrollTopFillerCount;\n            const viewportCount = this.virtualScrollViewportCount;\n            const bottomFilterCount = this.rows.length - topFillerCount - viewportCount;\n            return bottomFilterCount > 0 ? bottomFilterCount : 0;\n        },\n        virtualScrollTopFillerSize() {\n            const topFillerCount = this.virtualScrollTopFillerCount;\n            const rowHeight = this.virtualScrollRowHeight;\n            return topFillerCount * rowHeight;\n        },\n        virtualScrollBottomFillerSize() {\n            const bottomFillerCount = this.virtualScrollBottomFillerCount;\n            const rowHeight = this.virtualScrollRowHeight;\n            return bottomFillerCount * rowHeight;\n        },\n        virtualScrollRows() {\n            const topFillerCount = this.virtualScrollTopFillerCount;\n            const viewportCount = this.virtualScrollViewportCount;\n            return this.rows.slice(topFillerCount, topFillerCount + viewportCount);\n        },\n    },\n    methods: {\n        virtualScrollUpdateViewportHeight() {\n            this.virtualScrollViewportHeight = document.documentElement.clientHeight;\n        },\n        virtualScrollUpdateStartPosition() {\n            this.virtualScrollStartPosition = this.virtualScrollTopFiller.getBoundingClientRect().top + window.pageYOffset;\n        },\n        virtualScrollUpdateCurrentPosition() {\n            this.virtualScrollCurrentPosition = window.pageYOffset;\n        },\n        virtualScrollGetKey(row, index) {\n            const topFillerCount = this.virtualScrollTopFillerCount;\n            const viewportCount = this.virtualScrollViewportCount;\n            return (index + topFillerCount) % viewportCount;\n        }\n    },\n    watch: {\n        virtualScrollable() {\n            if (this.virtualScrollable) {\n                this.$nextTick(() => {\n                    this.virtualScrollTopFiller = document.querySelector(\"#virtualScrollTopFiller\");\n                    this.virtualScrollBottomFiller = document.querySelector(\"#virtualScrollBottomFiller\");\n                    this.virtualScrollUpdateStartPosition();\n                    window.addEventListener(\"resize\", this.virtualScrollUpdateStartPosition);\n                });\n            } else {\n                window.removeEventListener(\"resize\", this.virtualScrollUpdateStartPosition);\n            }\n        },\n    },\n}","import { Vue } from 'ui.vue';\n\nimport { TableLoader } from \"denvic.table.loader\";\nimport { Filter } from \"denvic.table.filters\";\nimport { SwitchSorter } from \"denvic.table.sorters\";\nimport { updateData } from \"./TestSource\";\nimport { MyTableHead } from \"denvic.table.table-head\";\nimport { Paginator } from \"denvic.table.paginators\";\nimport { VueTable } from \"denvic.table.vue-table\";\nimport Filterable from \"./mixins/Filterable\";\nimport Sortable from \"./mixins/Sortable\";\nimport Paginable from \"./mixins/Paginable\";\nimport InfScrollable from \"./mixins/InfScrollable\";\nimport virtualScrollable from \"./mixins/virtualScrollable\";\n\nVue.component('bx-table', {\n\ttemplate: `\n\t\t<div>\n\t\t\t<div>\n\t\t\t\tИспользовать бесконечный скролл\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tv-model=\"infScrollable\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tИспользовать виртуальный скролл\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tv-model=\"virtualScrollable\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<bx-paginators\n\t\t\t\tv-if=\"!infScrollable\"\n\t\t\t\tv-bind:pageSize=\"pageSize\"\n\t\t\t\tv-bind:pageNumber=\"pageNumber\"\n\t\t\t\tv-bind:totalPages=\"totalPages\"\n\t\t\t\t@paginate=\"updatePagination($event)\"\n\t\t\t/>\n\t\t\t<bx-vue-table\n\t\t\t\tv-bind:rows=\"computedRows\"\n\t\t\t\tv-bind:columns=\"columns\"\n\t\t\t\tv-bind:columnsHeads=\"columnsHeads\"\n\t\t\t\tv-bind:getKey=\"computedGetKey\"\n\t\t\t\tv-bind:defaultHeadClass=\"{ ['table-head']: true }\"\n\t\t\t\tv-bind:defaultCellClass=\"{ ['table-cell']: true }\"\n\t\t\t\tv-bind:useVirtualScroll=\"virtualScrollable\"\n\t\t\t\tv-bind:virtualScrollHeight=\"20\"\n\t\t\t\tv-bind:virtualScrollCount=\"25\"\n\t\t\t\tclass=\"table\"\n\t\t\t>\n\t\t\t\t<template v-if=\"virtualScrollable\" v-slot:start-tbody>\n\t\t\t\t\t<tr\n\t\t\t\t\t\tv-bind:colspan=\"rowSize\"\n\t\t\t\t\t\tid=\"virtualScrollTopFiller\"\n\t\t\t\t\t\tv-bind:style=\"{height: \\`\\${virtualScrollTopFillerSize}px\\`}\"\n\t\t\t\t\t/>\n\t\t\t\t</template>\n\t\t\t\t\n\t\t\t\t<template v-for=\"column in columns\" v-slot:[\\`\\${column}-head\\`]=\"{head}\">\n\t\t\t\t\t<bx-table-head v-bind:head=\"head\" v-bind:key=\"column\">\n\t\t\t\t\t\t<template v-if=\"column === 'announcementDate'\" v-slot:sorter\n\t\t\t\t\t\t\t><bx-sorters\n\t\t\t\t\t\t\t\tv-bind:sort=\"sorts[column]\"\n\t\t\t\t\t\t\t\tv-bind:column=\"column\"\n\t\t\t\t\t\t\t\tv-bind:index=\"sortsIndexes[column]\"\n\t\t\t\t\t\t\t\t@sort=\"updateSorts($event)\"\n\t\t\t\t\t\t/></template>\n\t\t\t\t\t\t<template v-slot:filter\n\t\t\t\t\t\t\t><bx-filters\n\t\t\t\t\t\t\t\tv-bind:is=\"filtersComponents[column]\"\n\t\t\t\t\t\t\t\tv-bind:filter=\"filters[column]\"\n\t\t\t\t\t\t\t\tv-bind:column=\"column\"\n\t\t\t\t\t\t\t\tv-bind:type=\"filtersTypes[column]\"\n\t\t\t\t\t\t\t\t:values=\"lists[column]\"\n\t\t\t\t\t\t\t\t@filter=\"updateFilters($event)\"\n\t\t\t\t\t\t/></template>\n\t\t\t\t\t</bx-table-head>\n\t\t\t\t</template>\n\n\t\t\t\t\n\t\t\t\t<template v-slot:source-cell=\"{row}\">\n\t\t\t\t\t<noindex>\n\t\t\t\t\t\t<a rel=\"nofollow\" :href=\"\\`\\${row.source}\\`\">{{ row.source }}</a>\n\t\t\t\t\t</noindex>\n\t\t\t\t</template>\n\n\t\t\t\t<template v-slot:end-tbody>\n\t\t\t\t\t<tr\n\t\t\t\t\t\tv-if=\"virtualScrollable\"\n\t\t\t\t\t\tv-bind:colspan=\"rowSize\"\n\t\t\t\t\t\tid=\"virtualScrollBottomFiller\"\n\t\t\t\t\t\tv-bind:style=\"\\`height:\\${virtualScrollBottomFillerSize}px\\`\"\n\t\t\t\t\t/>\n\t\t\t\t\t<tr\n\t\t\t\t\t\tv-if=\"infScrollable\"\n\t\t\t\t\t\tv-bind:colspan=\"rowSize\"\n\t\t\t\t\t\tid=\"infScrollBottomAnchor\"\n\t\t\t\t\t/>\n\t\t\t\t\t<bx-loader v-if=\"bottomLoader\" v-bind:colspan=\"rowSize\" />\n\t\t\t\t</template>\n\t\t\t</bx-vue-table>\n\n\t\t\t<bx-paginators\n\t\t\t\tv-if=\"!infScrollable\"\n\t\t\t\tv-bind:pageSize=\"pageSize\"\n\t\t\t\tv-bind:pageNumber=\"pageNumber\"\n\t\t\t\tv-bind:totalPages=\"totalPages\"\n\t\t\t\t@paginate=\"updatePagination($event)\"\n\t\t\t/>\n\t\t</div>\n\t`,\n\tprops:{\n\t\turl: '',\n\t},\n\tdata() {\n\t\treturn {\n\t\t\trows: [],\n\t\t\tcolumns: [\"typeMeasure\", \"industry\", \"status\", \"description\", \"announcementDate\", \"validity\", \"supportAmount\", \"source\"],\n\t\t\t\n\t\t\tlists: {\n\t\t\t\ttypeMeasure: {\n\t\t\t\t\t0: ''\n\t\t\t\t},\n\t\t\t\tindustry: {},\n\t\t\t\tstatus: {},\n\t\t\t},\n\t\t\tcolumnsHeads: {\n\t\t\t\ttypeMeasure: \"Тип\",\n\t\t\t\tindustry: \"Отрасль\",\n\t\t\t\tstatus: \"Статус\",\n\t\t\t\tdescription: \"Описание\",\n\t\t\t\tannouncementDate: \"Дата объявления\",\n\t\t\t\tvalidity: \"Срок действия\",\n\t\t\t\tsupportAmount: \"Сумма\",\n\t\t\t\tsource: \"Источник\",\n\t\t\t},\n\n\t\t\tfiltersTypes: {\n\t\t\t\ttypeMeasure: \"select\",\n\t\t\t\tindustry: \"select\",\n\t\t\t\tstatus: \"select\",\n\t\t\t\tdescription: \"\",\n\t\t\t\tannouncement_date: \"\",\n\t\t\t\tvalidity: \"\",\n\t\t\t\tsupportAmount: \"\",\n\t\t\t\tsource: \"\",\n\t\t\t},\n\t\t\tfiltersComponents: {\n\t\t\t\ttypeMeasure: \"bx-filters\",\n\t\t\t\tindustry: \"bx-filters\",\n\t\t\t\tstatus: \"bx-filters\",\n\t\t\t\tdescription: \"\",\n\t\t\t\tannouncement_date: \"\",\n\t\t\t\tvalidity: \"\",\n\t\t\t\tsupportAmount: \"\",\n\t\t\t\tsource: \"\",\n\t\t\t},\n\n\t\t\tbottomLoader: false,\n\n\t\t\tpageSize: 20,\n\t\t\ttotalPages: 0,\n\n\t\t\tinfScrollable: false,\n\t\t\tinfScrollStartSize: 100,\n\t\t\tinfScrollStepSize: 50,\n\t\t\tinfScrollTriggerOffset: 1000,\n\n\t\t\tvirtualScrollable: false,\n\t\t\tvirtualScrollBufferSize: 10,\n\t\t\tvirtualScrollRowHeight: 20,\n\t\t};\n\t},\n\tcomputed: {\n\t\trowSize() {\n\t\t\treturn this.columns.length;\n\t\t},\n\t\tsortsIndexes() {\n\t\t\treturn this.sortsOrder.reduce((res, column, index) => {\n\t\t\t\tres[column] = index + 1;\n\t\t\t\treturn res;\n\t\t\t}, {});\n\t\t},\n\t\tcomputedRows() {\n\t\t\treturn this.virtualScrollable ? this.virtualScrollRows : this.rows;\n\t\t},\n\t\tcomputedHeadLists() {\n\t\t\treturn this.virtualScrollable ? this.virtualScrollRows : this.rows;\n\t\t},\n\t\tcomputedGetKey() {\n\t\t\treturn this.virtualScrollable ? this.virtualScrollGetKey : this.getKey;\n\t\t},\n\t\tgetKey(row) {\n\t\t\treturn row.id;\n\t\t},\n\t},\n\tmethods: {\n\t\tupdateData(infScroll) {\n\t\t\tupdateData(this, !infScroll);\n\t\t},\n\t\t\n\t},\n\tcreated() {\n\t\tthis.updateData();\n\t},\n\twatch: {\n\t\tinfScrollable() {\n\t\t\t(this.paginable = !this.infScrollable), this.updateData();\n\t\t},\n\t},\n\tmixins: [Filterable, Sortable, Paginable, InfScrollable, virtualScrollable],\n})"],"names":["timeout","updateData","data","clear","bottomLoader","rows","clearTimeout","startIndex","endIndex","infScrollable","length","infScrollStepSize","infScrollStartSize","paginable","pageSize","pageNumber","BX","ajax","url","sorts","filters","navParams","method","dataType","async","processData","scriptsRunFirst","emulateOnload","start","cache","onsuccess","result","console","log","totalPages","Math","ceil","lists","typeMeasure","Object","assign","typeMeasureList","industry","industryList","status","statusList","onfailure","updateDataWithoutDebounce","setTimeout","filterable","methods","updateFilters","filter","column","Vue","this","set","watch","Function","sortable","sortsOrder","updateSorts","sort","indexOf","push","sortsOrger","updatePagination","infScrollViewportHeight","infScrollBottomPosition","created","infScrollUpdateViewportHeight","infScrollUpdateCurrentPosition","window","addEventListener","infScrollBottomAnchor","document","querySelector","infScrollUpdateBottomPosition","unmounted","removeEventListener","documentElement","clientHeight","getBoundingClientRect","top","pageYOffset","currentPosition","viewportHeight","bottomPosition","triggerOffset","infScrollTriggerOffset","$nextTick","_this","_this2","virtualScrollable","virtualScrollViewportHeight","virtualScrollStartPosition","virtualScrollCurrentPosition","virtualScrollUpdateViewportHeight","virtualScrollUpdateCurrentPosition","virtualScrollTopFiller","virtualScrollBottomFiller","virtualScrollUpdateStartPosition","computed","virtualScrollListSize","virtualScrollRowHeight","virtualScrollListPosition","virtualScrollTopFillerCount","listPosition","rowHeight","bufferSize","virtualScrollBufferSize","topFilterCount","floor","virtualScrollViewportCount","virtualScrollBottomFillerCount","topFillerCount","viewportCount","bottomFilterCount","virtualScrollTopFillerSize","virtualScrollBottomFillerSize","virtualScrollRows","slice","virtualScrollGetKey","row","index","component","template","props","columns","columnsHeads","description","announcementDate","validity","supportAmount","source","filtersTypes","announcement_date","filtersComponents","rowSize","sortsIndexes","reduce","res","computedRows","computedHeadLists","computedGetKey","getKey","id","infScroll","mixins","Filterable","Sortable","Paginable","InfScrollable"],"mappings":"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"}